{"version":3,"sources":["generated/graphql.tsx","components/LaunchList/LaunchList.tsx","components/LaunchList/index.tsx","components/LaunchProfile/LaunchProfile.tsx","components/LaunchProfile/index.tsx","App.tsx","index.tsx"],"names":["CacheControlScope","CapsuleRange","LaunchRange","Order","defaultOptions","LaunchListDocument","gql","LaunchProfileDocument","className","LaunchList","data","handleIdChange","launches","map","launch","i","onClick","flight_number","mission_name","launch_year","scene","THREE","console","log","LaunchListContainer","props","baseOptions","options","Apollo","useLaunchListQuery","error","loading","LaunchProfile","launch_success","rocket","rocket_name","rocket_type","details","links","flickr_images","image","src","alt","LaunchProfileContainer","id","useLaunchProfileQuery","variables","String","refetch","React","App","setId","newId","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.83714d3d.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions =  {}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type BasicMission = {\n  __typename?: 'BasicMission';\n  flight?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport enum CacheControlScope {\n  Private = 'PRIVATE',\n  Public = 'PUBLIC'\n}\n\nexport type Capsule = {\n  __typename?: 'Capsule';\n  capsule_id?: Maybe<Scalars['String']>;\n  capsule_serial?: Maybe<Scalars['String']>;\n  details?: Maybe<Scalars['String']>;\n  landings?: Maybe<Scalars['Int']>;\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\n  original_launch?: Maybe<Scalars['String']>;\n  original_launch_unix?: Maybe<Scalars['Float']>;\n  reuse_count?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport enum CapsuleRange {\n  Past = 'past',\n  Upcoming = 'upcoming'\n}\n\nexport type Core = {\n  __typename?: 'Core';\n  asds_attempts?: Maybe<Scalars['Int']>;\n  asds_landings?: Maybe<Scalars['Int']>;\n  block?: Maybe<Scalars['Int']>;\n  core_serial?: Maybe<Scalars['String']>;\n  details?: Maybe<Scalars['String']>;\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\n  original_launch?: Maybe<Scalars['String']>;\n  original_launch_unix?: Maybe<Scalars['Float']>;\n  reuse_count?: Maybe<Scalars['Int']>;\n  rtls_attempts?: Maybe<Scalars['Int']>;\n  rtls_landings?: Maybe<Scalars['Int']>;\n  status?: Maybe<Scalars['String']>;\n  water_landing?: Maybe<Scalars['Boolean']>;\n};\n\nexport type Dimension = {\n  __typename?: 'Dimension';\n  feet?: Maybe<Scalars['Float']>;\n  meters?: Maybe<Scalars['Float']>;\n};\n\nexport type Dragon = {\n  __typename?: 'Dragon';\n  active?: Maybe<Scalars['Boolean']>;\n  crew_capacity?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  diameter?: Maybe<Dimension>;\n  dry_mass_kg?: Maybe<Scalars['Int']>;\n  dry_mass_lb?: Maybe<Scalars['Int']>;\n  first_flight?: Maybe<Scalars['String']>;\n  heat_shield?: Maybe<HeatShield>;\n  height_w_trunk?: Maybe<Dimension>;\n  id?: Maybe<Scalars['String']>;\n  launch_payload_mass?: Maybe<Mass>;\n  launch_payload_vol?: Maybe<PayloadVolume>;\n  name?: Maybe<Scalars['String']>;\n  orbit_duration_yr?: Maybe<Scalars['Int']>;\n  pressurized_capsule?: Maybe<PressurizedCapsule>;\n  return_payload_mass?: Maybe<Mass>;\n  return_payload_vol?: Maybe<PayloadVolume>;\n  sidewall_angle_deg?: Maybe<Scalars['Int']>;\n  thrusters?: Maybe<Array<Maybe<Thruster>>>;\n  trunk?: Maybe<Trunk>;\n  type?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Engines = {\n  __typename?: 'Engines';\n  engine_loss_max?: Maybe<Scalars['Int']>;\n  layout?: Maybe<Scalars['String']>;\n  number?: Maybe<Scalars['Int']>;\n  propellant_1?: Maybe<Scalars['String']>;\n  propellant_2?: Maybe<Scalars['String']>;\n  thrust_sea_level?: Maybe<Thrust>;\n  thrust_to_weight?: Maybe<Scalars['Float']>;\n  thrust_vacuum?: Maybe<Thrust>;\n  type?: Maybe<Scalars['String']>;\n  version?: Maybe<Scalars['String']>;\n};\n\nexport type Fairing = {\n  __typename?: 'Fairing';\n  diameter?: Maybe<Dimension>;\n  height?: Maybe<Dimension>;\n};\n\nexport type Headquarters = {\n  __typename?: 'Headquarters';\n  address?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  state?: Maybe<Scalars['String']>;\n};\n\nexport type HeatShield = {\n  __typename?: 'HeatShield';\n  dev_partner?: Maybe<Scalars['String']>;\n  material?: Maybe<Scalars['String']>;\n  size_meters?: Maybe<Scalars['Float']>;\n  temp_degrees?: Maybe<Scalars['Int']>;\n};\n\nexport type History = {\n  __typename?: 'History';\n  details?: Maybe<Scalars['String']>;\n  event_date_unix?: Maybe<Scalars['Float']>;\n  event_date_utc?: Maybe<Scalars['String']>;\n  flight_number?: Maybe<Scalars['Int']>;\n  id?: Maybe<Scalars['Int']>;\n  links?: Maybe<HistoryLinks>;\n  title?: Maybe<Scalars['String']>;\n};\n\nexport type HistoryLinks = {\n  __typename?: 'HistoryLinks';\n  article?: Maybe<Scalars['String']>;\n  reddit?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Info = {\n  __typename?: 'Info';\n  ceo?: Maybe<Scalars['String']>;\n  coo?: Maybe<Scalars['String']>;\n  cto?: Maybe<Scalars['String']>;\n  cto_propulsion?: Maybe<Scalars['String']>;\n  employees?: Maybe<Scalars['Int']>;\n  founded?: Maybe<Scalars['Int']>;\n  founder?: Maybe<Scalars['String']>;\n  headquarters?: Maybe<Headquarters>;\n  launch_sites?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  summary?: Maybe<Scalars['String']>;\n  test_sites?: Maybe<Scalars['Int']>;\n  valuation?: Maybe<Scalars['Float']>;\n  vehicles?: Maybe<Scalars['Int']>;\n};\n\nexport type LandingLegs = {\n  __typename?: 'LandingLegs';\n  material?: Maybe<Scalars['String']>;\n  number?: Maybe<Scalars['Int']>;\n};\n\nexport type Landingpad = {\n  __typename?: 'Landingpad';\n  attempted_landings?: Maybe<Scalars['Int']>;\n  details?: Maybe<Scalars['String']>;\n  full_name?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['String']>;\n  landing_type?: Maybe<Scalars['String']>;\n  location?: Maybe<Location>;\n  status?: Maybe<Scalars['String']>;\n  successful_landings?: Maybe<Scalars['Int']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Launch = {\n  __typename?: 'Launch';\n  details?: Maybe<Scalars['String']>;\n  flight_number?: Maybe<Scalars['Int']>;\n  is_tentative?: Maybe<Scalars['Boolean']>;\n  launch_date_local?: Maybe<Scalars['String']>;\n  launch_date_unix?: Maybe<Scalars['Float']>;\n  launch_date_utc?: Maybe<Scalars['String']>;\n  launch_site?: Maybe<LaunchSite>;\n  launch_success?: Maybe<Scalars['Boolean']>;\n  launch_window?: Maybe<Scalars['Int']>;\n  launch_year?: Maybe<Scalars['Int']>;\n  links?: Maybe<LaunchLinks>;\n  mission_id?: Maybe<Array<Maybe<Scalars['String']>>>;\n  mission_name?: Maybe<Scalars['String']>;\n  rocket?: Maybe<LaunchRocket>;\n  ships?: Maybe<Array<Maybe<Scalars['String']>>>;\n  static_fire_date_unix?: Maybe<Scalars['Float']>;\n  static_fire_date_utc?: Maybe<Scalars['String']>;\n  tbd?: Maybe<Scalars['Boolean']>;\n  telemetry?: Maybe<LaunchTelemetry>;\n  tentative_max_precision?: Maybe<Scalars['String']>;\n  timeline?: Maybe<LaunchTimeline>;\n  upcoming?: Maybe<Scalars['Boolean']>;\n};\n\nexport type LaunchLinks = {\n  __typename?: 'LaunchLinks';\n  article_link?: Maybe<Scalars['String']>;\n  flickr_images?: Maybe<Array<Maybe<Scalars['String']>>>;\n  mission_patch?: Maybe<Scalars['String']>;\n  mission_patch_small?: Maybe<Scalars['String']>;\n  presskit?: Maybe<Scalars['String']>;\n  reddit_campaign?: Maybe<Scalars['String']>;\n  reddit_launch?: Maybe<Scalars['String']>;\n  reddit_media?: Maybe<Scalars['String']>;\n  reddit_recovery?: Maybe<Scalars['String']>;\n  video_link?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n  youtube_id?: Maybe<Scalars['String']>;\n};\n\nexport enum LaunchRange {\n  Latest = 'latest',\n  Next = 'next',\n  Past = 'past',\n  Upcoming = 'upcoming'\n}\n\nexport type LaunchRocket = {\n  __typename?: 'LaunchRocket';\n  fairings?: Maybe<LaunchRocketFairings>;\n  first_stage?: Maybe<LaunchRocketFirstStage>;\n  rocket_id?: Maybe<Scalars['String']>;\n  rocket_name?: Maybe<Scalars['String']>;\n  rocket_type?: Maybe<Scalars['String']>;\n  second_stage?: Maybe<LaunchRocketSecondStage>;\n};\n\nexport type LaunchRocketFairings = {\n  __typename?: 'LaunchRocketFairings';\n  recovered?: Maybe<Scalars['Boolean']>;\n  recovery_attempt?: Maybe<Scalars['Boolean']>;\n  reused?: Maybe<Scalars['Boolean']>;\n  ship?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchRocketFirstStage = {\n  __typename?: 'LaunchRocketFirstStage';\n  cores?: Maybe<Array<Maybe<LaunchRocketFirstStageCore>>>;\n};\n\nexport type LaunchRocketFirstStageCore = {\n  __typename?: 'LaunchRocketFirstStageCore';\n  block?: Maybe<Scalars['Int']>;\n  core_serial?: Maybe<Scalars['String']>;\n  flight?: Maybe<Scalars['Int']>;\n  gridfins?: Maybe<Scalars['Boolean']>;\n  land_success?: Maybe<Scalars['Boolean']>;\n  landing_intent?: Maybe<Scalars['Boolean']>;\n  landing_type?: Maybe<Scalars['String']>;\n  landing_vehicle?: Maybe<Scalars['String']>;\n  legs?: Maybe<Scalars['Boolean']>;\n  reused?: Maybe<Scalars['Boolean']>;\n};\n\nexport type LaunchRocketSecondStage = {\n  __typename?: 'LaunchRocketSecondStage';\n  block?: Maybe<Scalars['Int']>;\n  payloads?: Maybe<Array<Maybe<Payload>>>;\n};\n\nexport type LaunchSite = {\n  __typename?: 'LaunchSite';\n  site_id?: Maybe<Scalars['String']>;\n  site_name?: Maybe<Scalars['String']>;\n  site_name_long?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchTelemetry = {\n  __typename?: 'LaunchTelemetry';\n  flight_club?: Maybe<Scalars['String']>;\n};\n\nexport type LaunchTimeline = {\n  __typename?: 'LaunchTimeline';\n  beco?: Maybe<Scalars['Int']>;\n  center_core_boostback?: Maybe<Scalars['Int']>;\n  center_core_entry_burn?: Maybe<Scalars['Int']>;\n  center_core_landing?: Maybe<Scalars['Int']>;\n  center_stage_sep?: Maybe<Scalars['Int']>;\n  dragon_bay_door_deploy?: Maybe<Scalars['Int']>;\n  dragon_separation?: Maybe<Scalars['Int']>;\n  dragon_solar_deploy?: Maybe<Scalars['Int']>;\n  engine_chill?: Maybe<Scalars['Int']>;\n  fairing_deploy?: Maybe<Scalars['Int']>;\n  first_stage_entry_burn?: Maybe<Scalars['Int']>;\n  first_stage_landing?: Maybe<Scalars['Int']>;\n  first_stage_landing_burn?: Maybe<Scalars['Int']>;\n  go_for_launch?: Maybe<Scalars['Int']>;\n  go_for_prop_loading?: Maybe<Scalars['Int']>;\n  ignition?: Maybe<Scalars['Int']>;\n  liftoff?: Maybe<Scalars['Int']>;\n  maxq?: Maybe<Scalars['Int']>;\n  meco?: Maybe<Scalars['Int']>;\n  payload_deploy?: Maybe<Scalars['Int']>;\n  payload_deploy_1?: Maybe<Scalars['Int']>;\n  payload_deploy_2?: Maybe<Scalars['Int']>;\n  prelaunch_checks?: Maybe<Scalars['Int']>;\n  propellant_pressurization?: Maybe<Scalars['Int']>;\n  rp1_loading?: Maybe<Scalars['Int']>;\n  seco_1?: Maybe<Scalars['Int']>;\n  seco_2?: Maybe<Scalars['Int']>;\n  second_stage_ignition?: Maybe<Scalars['Int']>;\n  second_stage_restart?: Maybe<Scalars['Int']>;\n  side_core_boostback?: Maybe<Scalars['Int']>;\n  side_core_entry_burn?: Maybe<Scalars['Int']>;\n  side_core_landing?: Maybe<Scalars['Int']>;\n  side_core_sep?: Maybe<Scalars['Int']>;\n  stage1_lox_loading?: Maybe<Scalars['Int']>;\n  stage1_rp1_loading?: Maybe<Scalars['Int']>;\n  stage2_lox_loading?: Maybe<Scalars['Int']>;\n  stage2_rp1_loading?: Maybe<Scalars['Int']>;\n  stage_sep?: Maybe<Scalars['Int']>;\n  webcast_liftoff?: Maybe<Scalars['Int']>;\n};\n\nexport type Launchpad = {\n  __typename?: 'Launchpad';\n  attempted_launches?: Maybe<Scalars['Int']>;\n  details?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  location?: Maybe<Location>;\n  site_id?: Maybe<Scalars['String']>;\n  site_name_long?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  successful_launches?: Maybe<Scalars['Int']>;\n  vehicles_launched?: Maybe<Array<Maybe<Scalars['String']>>>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Location = {\n  __typename?: 'Location';\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n  region?: Maybe<Scalars['String']>;\n};\n\nexport type Mass = {\n  __typename?: 'Mass';\n  kg?: Maybe<Scalars['Int']>;\n  lb?: Maybe<Scalars['Int']>;\n};\n\nexport type Mission = {\n  __typename?: 'Mission';\n  description?: Maybe<Scalars['String']>;\n  manufacturers?: Maybe<Array<Maybe<Scalars['String']>>>;\n  mission_id?: Maybe<Scalars['String']>;\n  mission_name?: Maybe<Scalars['String']>;\n  payload_ids?: Maybe<Array<Maybe<Scalars['String']>>>;\n  twitter?: Maybe<Scalars['String']>;\n  website?: Maybe<Scalars['String']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport enum Order {\n  Asc = 'asc',\n  Desc = 'desc'\n}\n\nexport type Payload = {\n  __typename?: 'Payload';\n  cap_serial?: Maybe<Scalars['String']>;\n  cargo_manifest?: Maybe<Scalars['String']>;\n  customers?: Maybe<Array<Maybe<Scalars['String']>>>;\n  flight_time_sec?: Maybe<Scalars['Int']>;\n  manufacturer?: Maybe<Scalars['String']>;\n  mass_returned_kg?: Maybe<Scalars['Float']>;\n  mass_returned_lbs?: Maybe<Scalars['Float']>;\n  nationality?: Maybe<Scalars['String']>;\n  norad_id?: Maybe<Array<Maybe<Scalars['String']>>>;\n  orbit?: Maybe<Scalars['String']>;\n  orbit_params?: Maybe<PayloadOrbitParams>;\n  payload_id?: Maybe<Scalars['String']>;\n  payload_mass_kg?: Maybe<Scalars['Float']>;\n  payload_mass_lbs?: Maybe<Scalars['Float']>;\n  payload_type?: Maybe<Scalars['String']>;\n  reused?: Maybe<Scalars['Boolean']>;\n};\n\nexport type PayloadOrbitParams = {\n  __typename?: 'PayloadOrbitParams';\n  apoapsis_km?: Maybe<Scalars['Float']>;\n  arg_of_pericenter?: Maybe<Scalars['Float']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  epoch?: Maybe<Scalars['String']>;\n  inclination_deg?: Maybe<Scalars['Float']>;\n  lifespan_years?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n  mean_anomaly?: Maybe<Scalars['Float']>;\n  mean_motion?: Maybe<Scalars['Float']>;\n  periapsis_km?: Maybe<Scalars['Float']>;\n  period_min?: Maybe<Scalars['Float']>;\n  raan?: Maybe<Scalars['Float']>;\n  reference_system?: Maybe<Scalars['String']>;\n  regime?: Maybe<Scalars['String']>;\n  semi_major_axis_km?: Maybe<Scalars['Float']>;\n};\n\nexport type PayloadVolume = {\n  __typename?: 'PayloadVolume';\n  cubic_feet?: Maybe<Scalars['Int']>;\n  cubic_meters?: Maybe<Scalars['Int']>;\n};\n\nexport type Position = {\n  __typename?: 'Position';\n  latitude?: Maybe<Scalars['Float']>;\n  longitude?: Maybe<Scalars['Float']>;\n};\n\nexport type PressurizedCapsule = {\n  __typename?: 'PressurizedCapsule';\n  payload_volume?: Maybe<PayloadVolume>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  capsule?: Maybe<Capsule>;\n  capsules?: Maybe<Array<Maybe<Capsule>>>;\n  core?: Maybe<Core>;\n  cores?: Maybe<Array<Maybe<Core>>>;\n  dragon?: Maybe<Dragon>;\n  dragons?: Maybe<Array<Maybe<Dragon>>>;\n  history?: Maybe<Array<Maybe<History>>>;\n  info?: Maybe<Info>;\n  landingpad?: Maybe<Landingpad>;\n  landingpads?: Maybe<Array<Maybe<Landingpad>>>;\n  launch?: Maybe<Launch>;\n  launches?: Maybe<Array<Maybe<Launch>>>;\n  launchpad?: Maybe<Launchpad>;\n  launchpads?: Maybe<Array<Maybe<Launchpad>>>;\n  mission?: Maybe<Mission>;\n  missions?: Maybe<Array<Maybe<Mission>>>;\n  payload?: Maybe<Payload>;\n  payloads?: Maybe<Array<Maybe<Payload>>>;\n  roadster?: Maybe<Roadster>;\n  rocket?: Maybe<Rocket>;\n  rockets?: Maybe<Array<Maybe<Rocket>>>;\n  ship?: Maybe<Ship>;\n  ships?: Maybe<Array<Maybe<Ship>>>;\n};\n\n\nexport type QueryCapsuleArgs = {\n  capsule_serial: Scalars['String'];\n};\n\n\nexport type QueryCapsulesArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  range?: Maybe<CapsuleRange>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryCoreArgs = {\n  core_serial: Scalars['String'];\n};\n\n\nexport type QueryCoresArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryDragonArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryDragonsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryHistoryArgs = {\n  id?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLandingpadArgs = {\n  id?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLandingpadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryLaunchArgs = {\n  id?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLaunchesArgs = {\n  ids?: Maybe<Array<Maybe<Scalars['String']>>>;\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  range?: Maybe<LaunchRange>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryLaunchpadArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryLaunchpadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryMissionArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryMissionsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryPayloadArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryPayloadsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryRocketArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryRocketsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryShipArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryShipsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  offset?: Maybe<Scalars['Int']>;\n  order?: Maybe<Order>;\n  sort?: Maybe<Scalars['String']>;\n};\n\nexport type Roadster = {\n  __typename?: 'Roadster';\n  apoapsis_au?: Maybe<Scalars['Float']>;\n  details?: Maybe<Scalars['String']>;\n  earth_distance_km?: Maybe<Scalars['Float']>;\n  earth_distance_mi?: Maybe<Scalars['Float']>;\n  eccentricity?: Maybe<Scalars['Float']>;\n  epoch_jd?: Maybe<Scalars['Float']>;\n  inclination?: Maybe<Scalars['Float']>;\n  launch_date_unix?: Maybe<Scalars['Float']>;\n  launch_date_utc?: Maybe<Scalars['String']>;\n  launch_mass_kg?: Maybe<Scalars['Int']>;\n  launch_mass_lbs?: Maybe<Scalars['Int']>;\n  longitude?: Maybe<Scalars['Float']>;\n  mars_distance_km?: Maybe<Scalars['Float']>;\n  mars_distance_mi?: Maybe<Scalars['Float']>;\n  name: Scalars['String'];\n  norad_id?: Maybe<Scalars['Int']>;\n  orbit_type?: Maybe<Scalars['String']>;\n  periapsis_arg?: Maybe<Scalars['Float']>;\n  period_days?: Maybe<Scalars['Float']>;\n  semi_major_axis_au?: Maybe<Scalars['Float']>;\n  speed_kph?: Maybe<Scalars['Float']>;\n  speed_mph?: Maybe<Scalars['Float']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type Rocket = {\n  __typename?: 'Rocket';\n  active?: Maybe<Scalars['Boolean']>;\n  boosters?: Maybe<Scalars['Int']>;\n  company?: Maybe<Scalars['String']>;\n  cost_per_launch?: Maybe<Scalars['Int']>;\n  country?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  diameter?: Maybe<Dimension>;\n  engines?: Maybe<Engines>;\n  first_flight?: Maybe<Scalars['String']>;\n  first_stage?: Maybe<RocketFirstStage>;\n  flickr_images?: Maybe<Array<Maybe<Scalars['String']>>>;\n  height?: Maybe<Dimension>;\n  id?: Maybe<Scalars['Int']>;\n  landing_legs?: Maybe<LandingLegs>;\n  mass?: Maybe<Mass>;\n  payload_weights?: Maybe<Array<Maybe<RocketPayloadWeight>>>;\n  rocket_id?: Maybe<Scalars['String']>;\n  rocket_name?: Maybe<Scalars['String']>;\n  rocket_type?: Maybe<Scalars['String']>;\n  second_stage?: Maybe<RocketSecondStage>;\n  stages?: Maybe<Scalars['Int']>;\n  success_rate_pct?: Maybe<Scalars['Float']>;\n  wikipedia?: Maybe<Scalars['String']>;\n};\n\nexport type RocketFirstStage = {\n  __typename?: 'RocketFirstStage';\n  burn_time_sec?: Maybe<Scalars['Int']>;\n  engines?: Maybe<Scalars['Int']>;\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\n  reusable?: Maybe<Scalars['Boolean']>;\n  thrust_sea_level?: Maybe<Thrust>;\n  thrust_vacuum?: Maybe<Thrust>;\n};\n\nexport type RocketPayload = {\n  __typename?: 'RocketPayload';\n  composite_fairing?: Maybe<Fairing>;\n  option_1?: Maybe<Scalars['String']>;\n  option_2?: Maybe<Scalars['String']>;\n};\n\nexport type RocketPayloadWeight = {\n  __typename?: 'RocketPayloadWeight';\n  id?: Maybe<Scalars['String']>;\n  kg?: Maybe<Scalars['Float']>;\n  lb?: Maybe<Scalars['Float']>;\n  name?: Maybe<Scalars['String']>;\n};\n\nexport type RocketSecondStage = {\n  __typename?: 'RocketSecondStage';\n  burn_time_sec?: Maybe<Scalars['Int']>;\n  engines?: Maybe<Scalars['Int']>;\n  fuel_amount_tons?: Maybe<Scalars['Float']>;\n  payloads?: Maybe<RocketPayload>;\n  thrust?: Maybe<Thrust>;\n};\n\nexport type Ship = {\n  __typename?: 'Ship';\n  abs?: Maybe<Scalars['Int']>;\n  active?: Maybe<Scalars['Boolean']>;\n  attempted_landings?: Maybe<Scalars['Int']>;\n  class?: Maybe<Scalars['Int']>;\n  course_deg?: Maybe<Scalars['Float']>;\n  home_port?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['String']>;\n  imo?: Maybe<Scalars['Int']>;\n  missions?: Maybe<Array<Maybe<BasicMission>>>;\n  mmsi?: Maybe<Scalars['Int']>;\n  position?: Maybe<Position>;\n  roles?: Maybe<Array<Maybe<Scalars['String']>>>;\n  ship_id?: Maybe<Scalars['String']>;\n  ship_model?: Maybe<Scalars['String']>;\n  ship_name?: Maybe<Scalars['String']>;\n  ship_type?: Maybe<Scalars['String']>;\n  speed_kn?: Maybe<Scalars['Float']>;\n  status?: Maybe<Scalars['String']>;\n  successful_landings?: Maybe<Scalars['Int']>;\n  url?: Maybe<Scalars['String']>;\n  weight_kg?: Maybe<Scalars['Float']>;\n  weight_lbs?: Maybe<Scalars['Float']>;\n  year_built?: Maybe<Scalars['Int']>;\n};\n\nexport type Thrust = {\n  __typename?: 'Thrust';\n  kN?: Maybe<Scalars['Float']>;\n  lbf?: Maybe<Scalars['Float']>;\n};\n\nexport type Thruster = {\n  __typename?: 'Thruster';\n  amount?: Maybe<Scalars['Int']>;\n  fuel_1?: Maybe<Scalars['String']>;\n  fuel_2?: Maybe<Scalars['String']>;\n  pods?: Maybe<Scalars['Int']>;\n  thrust?: Maybe<Thrust>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type Trunk = {\n  __typename?: 'Trunk';\n  cargo?: Maybe<TrunkCargo>;\n  trunk_volume?: Maybe<PayloadVolume>;\n};\n\nexport type TrunkCargo = {\n  __typename?: 'TrunkCargo';\n  solar_array?: Maybe<Scalars['Int']>;\n  unpressurized_cargo?: Maybe<Scalars['Boolean']>;\n};\n\nexport type LaunchListQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LaunchListQuery = { __typename?: 'Query', launches?: Array<{ __typename?: 'Launch', flight_number?: number | null | undefined, mission_name?: string | null | undefined, launch_year?: number | null | undefined } | null | undefined> | null | undefined };\n\nexport type LaunchProfileQueryVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type LaunchProfileQuery = { __typename?: 'Query', launch?: { __typename?: 'Launch', flight_number?: number | null | undefined, mission_name?: string | null | undefined, launch_year?: number | null | undefined, launch_success?: boolean | null | undefined, details?: string | null | undefined, launch_site?: { __typename?: 'LaunchSite', site_name?: string | null | undefined } | null | undefined, rocket?: { __typename?: 'LaunchRocket', rocket_name?: string | null | undefined, rocket_type?: string | null | undefined } | null | undefined, links?: { __typename?: 'LaunchLinks', flickr_images?: Array<string | null | undefined> | null | undefined } | null | undefined } | null | undefined };\n\n\nexport const LaunchListDocument = gql`\n    query LaunchList {\n  launches {\n    flight_number\n    mission_name\n    launch_year\n  }\n}\n    `;\n\n/**\n * __useLaunchListQuery__\n *\n * To run a query within a React component, call `useLaunchListQuery` and pass it any options that fit your needs.\n * When your component renders, `useLaunchListQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLaunchListQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useLaunchListQuery(baseOptions?: Apollo.QueryHookOptions<LaunchListQuery, LaunchListQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<LaunchListQuery, LaunchListQueryVariables>(LaunchListDocument, options);\n      }\nexport function useLaunchListLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<LaunchListQuery, LaunchListQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<LaunchListQuery, LaunchListQueryVariables>(LaunchListDocument, options);\n        }\nexport type LaunchListQueryHookResult = ReturnType<typeof useLaunchListQuery>;\nexport type LaunchListLazyQueryHookResult = ReturnType<typeof useLaunchListLazyQuery>;\nexport type LaunchListQueryResult = Apollo.QueryResult<LaunchListQuery, LaunchListQueryVariables>;\nexport const LaunchProfileDocument = gql`\n    query LaunchProfile($id: String!) {\n  launch(id: $id) {\n    flight_number\n    mission_name\n    launch_year\n    launch_success\n    details\n    launch_site {\n      site_name\n    }\n    rocket {\n      rocket_name\n      rocket_type\n    }\n    links {\n      flickr_images\n    }\n  }\n}\n    `;\n\n/**\n * __useLaunchProfileQuery__\n *\n * To run a query within a React component, call `useLaunchProfileQuery` and pass it any options that fit your needs.\n * When your component renders, `useLaunchProfileQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLaunchProfileQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useLaunchProfileQuery(baseOptions: Apollo.QueryHookOptions<LaunchProfileQuery, LaunchProfileQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<LaunchProfileQuery, LaunchProfileQueryVariables>(LaunchProfileDocument, options);\n      }\nexport function useLaunchProfileLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<LaunchProfileQuery, LaunchProfileQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<LaunchProfileQuery, LaunchProfileQueryVariables>(LaunchProfileDocument, options);\n        }\nexport type LaunchProfileQueryHookResult = ReturnType<typeof useLaunchProfileQuery>;\nexport type LaunchProfileLazyQueryHookResult = ReturnType<typeof useLaunchProfileLazyQuery>;\nexport type LaunchProfileQueryResult = Apollo.QueryResult<LaunchProfileQuery, LaunchProfileQueryVariables>;","import * as React from 'react';\r\nimport { LaunchListQuery } from '../../generated/graphql';\r\nimport './styles.css';\r\n\r\nexport interface OwnProps {\r\n    handleIdChange: (newId: number) => void;\r\n}\r\n\r\ninterface Props extends OwnProps {\r\n    data: LaunchListQuery;\r\n}\r\n\r\nconst className = 'LaunchList';\r\n\r\nconst LaunchList: React.FC<Props> = ({ data, handleIdChange }) => (\r\n    <div className={className}>\r\n        <h3>Launches</h3>\r\n        <ol className={`${className}__list`}>\r\n            {!!data.launches &&\r\n            data.launches.map(\r\n                (launch, i) =>\r\n                    !!launch && (\r\n                        <li\r\n                            key={i}\r\n                            className={`${className}__item`}\r\n                            onClick={() => handleIdChange(launch.flight_number!)}\r\n                        >\r\n                            {launch.mission_name} ({launch.launch_year})\r\n                        </li>\r\n                    ),\r\n            )}\r\n        </ol>\r\n    </div>\r\n);\r\n\r\nexport default LaunchList;","import * as React from 'react';\r\n// @ts-ignore\r\nimport * as THREE from 'three';\r\n\r\nimport { useLaunchListQuery } from '../../generated/graphql';\r\nimport LaunchList, { OwnProps } from './LaunchList';\r\nconst scene = new THREE.Scene();\r\nconst LaunchListContainer: React.FC<OwnProps> = (props) => {\r\n    const { data, error, loading } = useLaunchListQuery();\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error || !data) {\r\n        return <div>ERROR</div>;\r\n    }\r\n\r\n    return <LaunchList data={data} {...props} />;\r\n};\r\nconsole.log(scene)\r\nexport default LaunchListContainer;","import * as React from 'react';\r\nimport { LaunchProfileQuery } from '../../generated/graphql';\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n    data: LaunchProfileQuery;\r\n}\r\n\r\nconst className = 'LaunchProfile';\r\n\r\nconst LaunchProfile: React.FC<Props> = ({ data }) => {\r\n    if (!data.launch) {\r\n        return <div>No launch available</div>;\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className={`${className}__status`}>\r\n                <span>Flight {data.launch.flight_number}: </span>\r\n                {data.launch.launch_success ? (\r\n                    <span className={`${className}__success`}>Success</span>\r\n                ) : (\r\n                    <span className={`${className}__failed`}>Failed</span>\r\n                )}\r\n            </div>\r\n            <h1 className={`${className}__title`}>\r\n                {data.launch.mission_name}\r\n                {data.launch.rocket &&\r\n                ` (${data.launch.rocket.rocket_name} | ${data.launch.rocket.rocket_type})`}\r\n            </h1>\r\n            <p className={`${className}__description`}>{data.launch.details}</p>\r\n            {!!data.launch.links && !!data.launch.links.flickr_images && (\r\n                <div className={`${className}__image-list`}>\r\n                    {data.launch.links.flickr_images.map((image, i) =>\r\n                        image ? (\r\n                            <img\r\n                                src={image}\r\n                                className={`${className}__image`}\r\n                                key={image}\r\n                                alt={`${data.launch?.mission_name} ${i}`}\r\n                            />\r\n                        ) : null,\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LaunchProfile;","import * as React from 'react';\r\nimport { useLaunchProfileQuery } from '../../generated/graphql';\r\nimport LaunchProfile from './LaunchProfile';\r\n\r\ninterface OwnProps {\r\n    id: number;\r\n}\r\n\r\nconst LaunchProfileContainer: React.FC<OwnProps> = ({ id }) => {\r\n    const { data, error, loading, refetch } = useLaunchProfileQuery({\r\n        variables: { id: String(id) },\r\n    });\r\n    React.useEffect(() => {\r\n        refetch({ id: String(id) });\r\n    }, [refetch, id]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>ERROR</div>;\r\n    }\r\n\r\n    if (!data) {\r\n        return <div>Select a flight from the panel</div>;\r\n    }\r\n\r\n    return <LaunchProfile data={data} />;\r\n};\r\n\r\nexport default LaunchProfileContainer;","import * as React from 'react';\nimport LaunchList from './components/LaunchList';\nimport LaunchProfile from './components/LaunchProfile';\n\nimport './App.css';\n\nconst App = () => {\n    const [id, setId] = React.useState(42);\n    const handleIdChange = React.useCallback(newId => {\n        setId(newId);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <LaunchList handleIdChange={handleIdChange} />\n            <LaunchProfile id={id} />\n        </div>\n    );\n};\n\nexport default App;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport './index.css';\nimport App from './App';\n\nconst client = new ApolloClient({\n    uri: 'https://spacexdata.herokuapp.com/graphql',\n    cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}